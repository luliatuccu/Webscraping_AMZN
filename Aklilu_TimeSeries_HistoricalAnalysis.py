# -*- coding: utf-8 -*-
"""YourLastName_TimeSeries_HistoricalAnalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bfoq5iwnXRG-8hwAfe2vOY3K9farzDeP

# 3b-ii-2
"""

import pandas as pd
import matplotlib.pyplot as plt
from statsmodels.tsa.seasonal import seasonal_decompose
from scipy.signal import savgol_filter

# Step 1: Load CSV, skip 'AMZN' header row, assign proper column names
df = pd.read_csv("Aklilu_Historical_Data.csv", skiprows=1, header=None)
df.columns = ['Date', 'Open', 'High', 'Low', 'Close', 'Volume']

# Step 2: Convert 'Date' to datetime
df['Date'] = pd.to_datetime(df['Date'])

# Step 3: Ensure 'Close' is numeric (in case there are stray text values)
df['Close'] = pd.to_numeric(df['Close'], errors='coerce')

# Step 4: Set 'Date' as index
df.set_index('Date', inplace=True)

# Step 5: Drop any rows with NaN 'Close' values
df = df.dropna(subset=['Close'])

# Step 6: Extract the time series data
ts_data = df['Close']

# Step 7: Decompose the time series
decomposition = seasonal_decompose(ts_data, model='additive', period=365)

# Step 8: Extract components
observed = decomposition.observed
trend = decomposition.trend
seasonal = decomposition.seasonal
residual = decomposition.resid

# Step 9: Add "cyclical" component by smoothing the trend
cyclical = savgol_filter(trend.fillna(method='bfill').fillna(method='ffill'), window_length=365, polyorder=3)

# Step 10: Plot the results
plt.figure(figsize=(14, 16))

plt.subplot(5, 1, 1)
plt.plot(observed, color='black')
plt.title('Original Data')

plt.subplot(5, 1, 2)
plt.plot(trend, color='red')
plt.title('Trend')

plt.subplot(5, 1, 3)
plt.plot(seasonal, color='green')
plt.title('Seasonal')

plt.subplot(5, 1, 4)
plt.plot(cyclical, color='purple')
plt.title('Cyclical Component (Smoothed Trend)')

plt.subplot(5, 1, 5)
plt.plot(residual, color='blue')
plt.title('Irregular (Residual)')

plt.tight_layout()
plt.suptitle("Amazon Historical Stock Price - Decomposition", fontsize=18, y=1.02)
plt.show()